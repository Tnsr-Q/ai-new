---
title: "ü§ñ AI Tools Tracker"
format: html
---

```{r setup, include=FALSE}
library(httr2)
library(jsonlite)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```

<div class="dashboard-grid">

# üöÄ AI Repository Explorer {.dashboard-title .neon-flicker}

```{r fetch-github-repos}
# Fetch AI repositories from GitHub
fetch_ai_repos <- function() {
  tryCatch({
    res <- request("https://api.github.com/search/repositories") %>%
      req_url_query(
        q = "AI machine learning language:python OR language:javascript OR language:typescript OR language:r", 
        sort = "updated", 
        per_page = 50
      ) %>%
      req_perform() %>%
      resp_body_json()
    
    ai_repos <- res$items %>%
      lapply(function(item) {
        list(
          full_name = item$full_name %||% "Unknown",
          html_url = item$html_url %||% "",
          description = item$description %||% "No description available",
          stargazers_count = item$stargazers_count %||% 0,
          language = item$language %||% "Unknown",
          updated_at = item$updated_at %||% "",
          default_branch = item$default_branch %||% "main"
        )
      }) %>%
      bind_rows()
    
    return(ai_repos)
  }, error = function(e) {
    # Fallback data in case of API issues
    data.frame(
      full_name = c("openai/gpt-4", "huggingface/transformers", "microsoft/LightGBM", "tensorflow/tensorflow", "pytorch/pytorch"),
      html_url = c("https://github.com/openai/gpt-4", "https://github.com/huggingface/transformers", "https://github.com/microsoft/LightGBM", "https://github.com/tensorflow/tensorflow", "https://github.com/pytorch/pytorch"),
      description = c("GPT-4 model repository", "State-of-the-art Natural Language Processing", "Gradient boosting framework", "An Open Source Machine Learning Framework", "Tensors and Dynamic neural networks"),
      stargazers_count = c(15000, 45000, 12000, 185000, 82000),
      language = c("Python", "Python", "Python", "C++", "Python"),
      updated_at = c("2024-01-01", "2024-01-02", "2024-01-03", "2024-01-04", "2024-01-05"),
      default_branch = c("main", "main", "master", "master", "main")
    )
  })
}

ai_repos <- fetch_ai_repos()

# Pass data to Observable JS
ojs_define(ai_repos_data = ai_repos)
```

<div class="row">
<div class="col-md-12">

::: {.card .neon-glow}
::: {.card-header}
üéØ **Select an AI Repository**
:::
::: {.card-body}

```{ojs}
// Create repository selector
viewof selected_repo = Inputs.select(
  ai_repos_data.map(d => d.full_name), 
  {
    label: "Choose a repository to explore:",
    value: ai_repos_data[0]?.full_name || "huggingface/transformers"
  }
)
```

:::
:::

</div>
</div>

<div class="row mt-4">
<div class="col-md-6">

::: {.card .neon-glow}
::: {.card-header}
üìä **Repository Details**
:::
::: {.card-body}

```{ojs}
// Display selected repository details
{
  const repo = ai_repos_data.find(d => d.full_name === selected_repo);
  if (repo) {
    return html`
      <div class="repo-item">
        <h5 class="repo-name">üî• ${repo.full_name}</h5>
        <p class="repo-description">üìù ${repo.description || 'No description available'}</p>
        <div class="mb-3">
          <span class="repo-stars">‚≠ê ${repo.stargazers_count?.toLocaleString() || 0} stars</span> | 
          <span style="color: #00ffff;">üîß ${repo.language || 'Unknown'}</span>
        </div>
        <div>
          <a href="${repo.html_url}" target="_blank" class="btn btn-primary me-2">
            üöÄ Visit Repository
          </a>
          <a href="${repo.html_url}/blob/${repo.default_branch || 'main'}/README.md" target="_blank" class="btn btn-outline-info">
            üìñ View README
          </a>
        </div>
      </div>
    `;
  }
  return html`<div class="text-center">Select a repository to view details</div>`;
}
```

:::
:::

::: {.card .neon-glow .mt-4}
::: {.card-header}
üåü **Top AI Repositories**
:::
::: {.card-body}

```{ojs}
// Display repository list
{
  const sortedRepos = ai_repos_data
    .sort((a, b) => (b.stargazers_count || 0) - (a.stargazers_count || 0))
    .slice(0, 10);
    
  return html`
    <div style="max-height: 400px; overflow-y: auto;">
      ${sortedRepos.map((repo, index) => html`
        <div class="repo-item mb-3" style="cursor: pointer; border: 1px solid #8b00ff; padding: 1rem; border-radius: 8px; background: rgba(0,0,0,0.6);" 
             onclick="${() => { selected_repo = repo.full_name; }}">
          <div style="display: flex; justify-content: space-between; align-items: start;">
            <div style="flex: 1;">
              <div class="repo-name" style="color: #00ff41; font-weight: bold; margin-bottom: 0.5rem;">
                ${index + 1}. ${repo.full_name}
              </div>
              <div class="repo-description" style="color: #00ffff; font-size: 0.9rem; margin-bottom: 0.5rem;">
                ${(repo.description || 'No description').substring(0, 120)}${(repo.description || '').length > 120 ? '...' : ''}
              </div>
              <div class="repo-stars" style="color: #ff6600; font-weight: 600;">
                ‚≠ê ${(repo.stargazers_count || 0).toLocaleString()} | üîß ${repo.language || 'Unknown'}
              </div>
            </div>
          </div>
        </div>
      `)}
    </div>
  `;
}
```

:::
:::

</div>
<div class="col-md-6">

::: {.card .neon-glow}
::: {.card-header}
üìñ **README Preview**
:::
::: {.card-body}

```{ojs}
// Generate README URL and display iframe
{
  const repo = ai_repos_data.find(d => d.full_name === selected_repo);
  const branch = repo?.default_branch || 'main';
  const github_url = `https://github.com/${selected_repo}/blob/${branch}/README.md`;
  
  return html`
    <div>
      <div style="margin-bottom: 1rem; text-align: center;">
        <a href="${github_url}" target="_blank" class="btn btn-primary">
          üìñ View Full README on GitHub
        </a>
      </div>
      <iframe 
        src="${github_url}" 
        width="100%" 
        height="600px" 
        style="border: 2px solid #00ffff; border-radius: 10px; background: white;"
        sandbox="allow-same-origin allow-scripts allow-popups allow-forms">
        <p>Your browser does not support iframes. <a href="${github_url}" target="_blank">Click here to view the README</a></p>
      </iframe>
    </div>
  `;
}
```

:::
:::

</div>
</div>

<div class="row mt-4">
<div class="col-md-12">

::: {.card .neon-glow}
::: {.card-header}
üîÑ **Auto-Update Information**
:::
::: {.card-body}
<div class="text-center">
This dashboard automatically updates daily at 8:00 AM ET with the latest trending AI repositories from GitHub.
<br>
<small class="text-muted">Last updated: `r Sys.time()` | Data source: GitHub API</small>
</div>
:::
:::

</div>
</div>

</div>
